(Opinion and knowledge sharing)
In symmetric encryption algorithm like DES,AES,ChaCha20 or Salsa20, the encryption and decryption is always done by
using a single key.

Symmetric encryption algorithm was used in a lot of environment. However, it creates a key distribution problem.
Hence, cryptographers and people explored and created a new kinds of ways to deliver the keys safely(Public
Key Cryptography)[https://en.wikipedia.org/wiki/Public-key_cryptography].

By itself, cryptography keys don't have an identifiable owner. Before PKI there was "a web of trust is a concept 
used in PGP, GnuPG, and other OpenPGP-compatible systems to establish the authenticity of the binding between
a public key and its owner."[https://en.wikipedia.org/wiki/Web_of_trust].In situation where PKI(Public Key 
Infrastructure) is not used, Alice and Bob can still have a conversation with each other online. However, 
it's hard to tell whether the other end of the conversation is really Bob/Alice. It can be imposters 
trying to mimic Alice/Bob. That is the problem that PKI(Public Key Infrastructure) is meant to solve.
[https://en.wikipedia.org/wiki/Public_key_infrastructure]

Please refer to this link to get a basic understanding of what's PKI in a visualized animated way.
(https://www.youtube.com/watch?v=i-rtxrEz_E8)

============PKCS with PKI (No cryptography keys authenticity problem)==========================================
CA(Certificate Authority) signed certificate or document/public key do solve the trust issues of Alice
and Bob when they are having a conversation. This kind of scheme allows Alice/Bob to have trusts with each
other because they have each other CA signed certificate. The CA signed certificate does prove exactly the
identity of Alice and Bob.

Let's talk when certificate is ideal and when is not. Certificate is only ideal if you give identifiable
information to the CA. Often the case, these information are private to users. To make a certificate
authentic, CA needs to guarantee that they won't get compromised and the users need to give CA
identifiable information.

Some people might ask, "The certificate that we use in web servers seem to be fine, why users need to give
identifiable information to CA?". (Based on my understanding), web servers certificate do have to bind to
either a server IP address or domain name. The IP address or domain name indirectly links to the user who holds
it. The user who holds it bind the server IP address or domain name with their own credentials like
Email/Phone Number/IP addresses. Under this circumstance, certificate is ideal for only web servers or any
software that tells the origin.

(Based on my understanding)The core of PKI relies on users trusts towards the CA that they won't
leak their private keys and the identifiable information that users send to CA won't get leaked as well. 
This is the scheme that only works if users don't care about privacy or data leakage/breaches that mainly
caused by CA holding huge valuable data.

This proposed solution that PKCS(Public Key Cryptography System) uses is consider one of the form of "Take
a poison" solution. Under such scheme, participants within a conversation can prove who each other really
is by entrusting trusts towards the CA. This works great for security but not privacy. This proposed solution
doesn't have cryptography keys authenticitiy problem.

This cryptography keys authenticity problem does not exist in Signal or WhatsApp as the keys have bind to
the rightful owner through phone number though it does not involve with PKI or CA
================================================================================================================

===============PKCS without PKI(Cryptography Keys Authenticity Problem)=========================================

(Based on my understanding)The existence of PKI is to bind identity to the keys that generated by PKCS with the
help of CA. People can actually mimic this concept without involving CA and give identity(emails/phone
numbers/IP addresses) to the keys. This was done in Signal or WhatsApp, the difference is just Signal has
encrypted contacts whereas whatsapp has no encrypted contacts. I believe through the "PKCS with PKI" explanation,
people had understand what cryptography keys authenticity problem really is.

Let's try to mimic PKI but without credentials. (No offense/insult)Let's talk about Session messaging application
or any application that requires no email/phone numbers/IP addresses or private information. When users use
these kinds of applications, they can still in theory ask CA to sign the public keys or sign the certificate.
However, due to the lack of private information like email/phone numbers/IP addresses, the certificate or
public keys wouldn't be authentic, users can't verify each other identity. It can be an imposter or it can be
the real user, it's just impossible to know.

Not to mention when users use any of the applications that requires no private information, if the device that
stores the public key gets stolen or the public keys ownership has been transferred to someone else. It's
impossible for the server to know if it's imposter or the real owner.

If people decide to use PKCS without PKI, in theory, they wouldn't need to afraid of data leakage/breaches.
However, this proposed solution has cryptography keys authenticity problem. This proposed solution is also
consider as one of the form of "Take a poison" solution. This proposed solution guarantees privacy but not security.

================================================================================================================

I hope this document sums up when is PKI good and bad. I also hope that this document sums up why we can't have
both privacy and security in the same time by using PKI. 
